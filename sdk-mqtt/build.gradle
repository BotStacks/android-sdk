import dependencies.*
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply from: './gradleScript/dependencies.gradle'
//apply from: '../jacoco.gradle'

android {
    compileSdkVersion Version.compileSdk

    defaultConfig {
        minSdkVersion Version.minSdk
        targetSdkVersion Version.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        automationTest {
            initWith(buildTypes.debug)
            testCoverageEnabled = true
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId sdkMqttPackageName
            version = libraryVersion
            artifactId project.getName()

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.group != null && it.name != null && it.version != null && it.version != 'unspecified') {
                        def dependencyNode = dependencies.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}