/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.inappchat.sdk.models

import io.inappchat.sdk.models.Participant

import com.squareup.moshi.Json

/**
 * 
 *
 * @param groupId Group ID
 * @param name Group Name
 * @param groupType Type of group. for example privte/public. only private is supported as of now.
 * @param createdAt Group creation epoch timeStamp
 * @param description Description of group
 * @param profilePic Profile pic url. use chatServer URL as prefix to generate complete URL
 * @param profilePicThumb Profile pic thumbnail url. use chatServer URL as prefix to generate complete URL
 * @param creatorId appUserId of creator
 * @param threadId ThreadId associated with group. To be used for chat
 * @param participants List of participants
 */


data class APIGroup (

    /* Group ID */
    @Json(name = "groupId")
    val groupId: kotlin.String,

    /* Group Name */
    @Json(name = "name")
    val name: kotlin.String,

    /* Type of group. for example privte/public. only private is supported as of now. */
    @Json(name = "groupType")
    val groupType: APIGroup.GroupType,

    /* Group creation epoch timeStamp */
    @Json(name = "createdAt")
    val createdAt: java.math.BigDecimal,

    /* Description of group */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Profile pic url. use chatServer URL as prefix to generate complete URL */
    @Json(name = "profilePic")
    val profilePic: kotlin.String? = null,

    /* Profile pic thumbnail url. use chatServer URL as prefix to generate complete URL */
    @Json(name = "profilePicThumb")
    val profilePicThumb: kotlin.String? = null,

    /* appUserId of creator */
    @Json(name = "creatorId")
    val creatorId: kotlin.String? = null,

    /* ThreadId associated with group. To be used for chat */
    @Json(name = "threadId")
    val threadId: kotlin.String? = null,

    /* List of participants */
    @Json(name = "participants")
    val participants: kotlin.collections.List<Participant>? = null

) {

    /**
     * Type of group. for example privte/public. only private is supported as of now.
     *
     * Values: `public`,`private`
     */
    enum class GroupType(val value: kotlin.String) {
        @Json(name = "public") `public`("public"),
        @Json(name = "private") `private`("private");
    }
}

