/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.inappchat.sdk.models

import io.inappchat.sdk.models.ContactSchema
import io.inappchat.sdk.models.ForwardChatSchemaChatRequest
import io.inappchat.sdk.models.LocationSchema
import io.inappchat.sdk.models.MentionSchema
import io.inappchat.sdk.models.ReplyThreadSchemaChatRequest

import com.squareup.moshi.Json

/**
 * 
 *
 * @param threadId Thread Id. This is exclusive peer to recipientAppUserId.
 * @param recipientAppUserId App user Id of receiver. This is exclusive peer to threadId.
 * @param sendereRTCUserId eRTC user id of source user
 * @param message message text
 * @param msgType message type. it can be text/contact/location/gify
 * @param contact 
 * @param location 
 * @param gify gify URL
 * @param metadata JSON object which can be used for client reference in request/response context. Server will not do any processing on this object. eg. { \"abc\" : \"def\" }
 * @param replyThreadFeatureData 
 * @param forwardChatFeatureData 
 * @param mentions 
 * @param msgCorrelationId Client generated unique identifier used to trace message delivery till receiver.
 * @param senderTimeStampMs epoch timestamp (in ms) of message creation generated on sender device
 * @param customData JSON object which can be used for customer specific data which is not supported in InAppChat chat model. eg. { \"abc\" : \"def\" }
 */


data class ChatRequestObj (

    /* Thread Id. This is exclusive peer to recipientAppUserId. */
    @Json(name = "threadId")
    val threadId: kotlin.String? = null,

    /* App user Id of receiver. This is exclusive peer to threadId. */
    @Json(name = "recipientAppUserId")
    val recipientAppUserId: kotlin.String? = null,

    /* eRTC user id of source user */
    @Json(name = "sendereRTCUserId")
    val sendereRTCUserId: kotlin.String? = null,

    /* message text */
    @Json(name = "message")
    val message: kotlin.String? = null,

    /* message type. it can be text/contact/location/gify */
    @Json(name = "msgType")
    val msgType: kotlin.String? = null,

    @Json(name = "contact")
    val contact: ContactSchema? = null,

    @Json(name = "location")
    val location: LocationSchema? = null,

    /* gify URL */
    @Json(name = "gify")
    val gify: kotlin.String? = null,

    /* JSON object which can be used for client reference in request/response context. Server will not do any processing on this object. eg. { \"abc\" : \"def\" } */
    @Json(name = "metadata")
    val metadata: kotlin.Any? = null,

    @Json(name = "replyThreadFeatureData")
    val replyThreadFeatureData: ReplyThreadSchemaChatRequest? = null,

    @Json(name = "forwardChatFeatureData")
    val forwardChatFeatureData: ForwardChatSchemaChatRequest? = null,

    @Json(name = "mentions")
    val mentions: kotlin.collections.List<MentionSchema>? = null,

    /* Client generated unique identifier used to trace message delivery till receiver. */
    @Json(name = "msgCorrelationId")
    val msgCorrelationId: kotlin.String? = null,

    /* epoch timestamp (in ms) of message creation generated on sender device */
    @Json(name = "senderTimeStampMs")
    val senderTimeStampMs: java.math.BigDecimal? = null,

    /* JSON object which can be used for customer specific data which is not supported in InAppChat chat model. eg. { \"abc\" : \"def\" } */
    @Json(name = "customData")
    val customData: kotlin.Any? = null

)

