/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.inappchat.sdk.models

import io.inappchat.sdk.models.ChatStatusKeyListInner

import com.squareup.moshi.Json

/**
 * 
 *
 * @param returnCode return code for e2e encrypted chat request.  It can be senderKeyValidityExpired (new key to be provided in keyList, also new device key if there)  / receiverKeyValidationError / senderNewDeviceKeyAvailable (new device key to be provided in keyList,  also same device key if validity expired) / success 
 * @param retryRequired 
 * @param keyList 
 */


data class ChatStatus (

    /* return code for e2e encrypted chat request.  It can be senderKeyValidityExpired (new key to be provided in keyList, also new device key if there)  / receiverKeyValidationError / senderNewDeviceKeyAvailable (new device key to be provided in keyList,  also same device key if validity expired) / success  */
    @Json(name = "returnCode")
    val returnCode: ChatStatus.ReturnCode,

    @Json(name = "retryRequired")
    val retryRequired: kotlin.Boolean,

    @Json(name = "keyList")
    val keyList: kotlin.collections.List<ChatStatusKeyListInner>

) {

    /**
     * return code for e2e encrypted chat request.  It can be senderKeyValidityExpired (new key to be provided in keyList, also new device key if there)  / receiverKeyValidationError / senderNewDeviceKeyAvailable (new device key to be provided in keyList,  also same device key if validity expired) / success 
     *
     * Values: senderKeyValidityExpiredComma,receiverKeyValidationError,senderNewDeviceKeyAvailable,success
     */
    enum class ReturnCode(val value: kotlin.String) {
        @Json(name = "senderKeyValidityExpired,") senderKeyValidityExpiredComma("senderKeyValidityExpired,"),
        @Json(name = "receiverKeyValidationError") receiverKeyValidationError("receiverKeyValidationError"),
        @Json(name = "senderNewDeviceKeyAvailable") senderNewDeviceKeyAvailable("senderNewDeviceKeyAvailable"),
        @Json(name = "success") success("success");
    }
}

