/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.inappchat.sdk.models

import io.inappchat.sdk.models.ContactSchema
import io.inappchat.sdk.models.ForwardChatSchemaChatReceive
import io.inappchat.sdk.models.LocationSchema
import io.inappchat.sdk.models.MediaSchema
import io.inappchat.sdk.models.MentionSchema
import io.inappchat.sdk.models.ReactionInChatHistorySchema
import io.inappchat.sdk.models.ReplyThreadSchemaChatReceive

import com.squareup.moshi.Json

/**
 * 
 *
 * @param msgUniqueId Unique identified of chat object generated by server
 * @param tenantId Tenant Id
 * @param message message text. it can be present for any msgType value
 * @param msgType message type. it can be text/image/audio/video/gif/file/contact/location
 * @param contact 
 * @param location 
 * @param media 
 * @param gify gify URL
 * @param sendereRTCUserId sender eRTCUserId
 * @param createdAt Chat object creation epoch time in miliseconds
 * @param replyThreadFeatureData 
 * @param forwardChatFeatureData 
 * @param reactions list of reactions
 * @param isStarred If chat is starred
 * @param mentions 
 * @param deleteScheduleAt When the message will automatically be deleted if it was send when disappearing message option was on
 */


data class LastMessageSchema (

    /* Unique identified of chat object generated by server */
    @Json(name = "msgUniqueId")
    val msgUniqueId: kotlin.String? = null,

    /* Tenant Id */
    @Json(name = "tenantId")
    val tenantId: kotlin.String? = null,

    /* message text. it can be present for any msgType value */
    @Json(name = "message")
    val message: kotlin.String? = null,

    /* message type. it can be text/image/audio/video/gif/file/contact/location */
    @Json(name = "msgType")
    val msgType: kotlin.String? = null,

    @Json(name = "contact")
    val contact: ContactSchema? = null,

    @Json(name = "location")
    val location: LocationSchema? = null,

    @Json(name = "media")
    val media: MediaSchema? = null,

    /* gify URL */
    @Json(name = "gify")
    val gify: kotlin.String? = null,

    /* sender eRTCUserId */
    @Json(name = "sendereRTCUserId")
    val sendereRTCUserId: kotlin.String? = null,

    /* Chat object creation epoch time in miliseconds */
    @Json(name = "createdAt")
    val createdAt: kotlin.String? = null,

    @Json(name = "replyThreadFeatureData")
    val replyThreadFeatureData: ReplyThreadSchemaChatReceive? = null,

    @Json(name = "forwardChatFeatureData")
    val forwardChatFeatureData: ForwardChatSchemaChatReceive? = null,

    /* list of reactions */
    @Json(name = "reactions")
    val reactions: kotlin.collections.List<ReactionInChatHistorySchema>? = null,

    /* If chat is starred */
    @Json(name = "isStarred")
    val isStarred: kotlin.Boolean? = null,

    @Json(name = "mentions")
    val mentions: kotlin.collections.List<MentionSchema>? = null,

    /* When the message will automatically be deleted if it was send when disappearing message option was on */
    @Json(name = "deleteScheduleAt")
    val deleteScheduleAt: kotlin.String? = null

)

